
#include<iostream>
#include<assert.h>
#include<string>
#include<map>
#include<vector>
#include<algorithm> //for max function
#include<unordered_map>
using namespace std;

/*
217. Contains Duplicate
Easy
Given an array of integers, find if the array contains any duplicates.

Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.

Example 1:

Input: [1,2,3,1]
Output: true
Example 2:

Input: [1,2,3,4]
Output: false
Example 3:

Input: [1,1,1,3,3,4,3,2,4,2]
Output: true

Solving Method:
->create a map of <value, count>
->whenever input a value into a map, check the count to see if it is greater than 1
->loop until no more element to check
->spent only 10 mins to solve this problem (inlucded the time to understand the problem. omg..big improvement!
*/


class Solution {
public:
	bool containsDuplicate(vector<int>& nums) {
		map <int, int> countTable;
		for (int i = 0; i < nums.size(); i++) {
			if (countTable.count(nums[i]) == 0) {
				countTable[nums[i]] ++;
			}
			else {
				return true;
			}
		}

		return false;
	}
};

int main() {
	Solution s;

	return 0;
}
